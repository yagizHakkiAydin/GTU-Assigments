module mod_dp(
  input [31:0] A,   // Input A
  input [31:0] B,   // Input B
  input [2:0] state, // FSM state
  output reg [31:0] result, // Output result
  output reg done // Done signal
);

reg [31:0] temp;

always @(posedge clk or posedge rst) begin
  if (rst) begin
    result <= 0;
    done <= 0;
  end else begin
    case (state)
      S_SUB: temp <= A - B;
      S_COMPARE: begin
        if (temp < B) begin
          result <= temp;
          done <= 1;
        end else begin
          result <= temp;
          done <= 0;
        end
      end
      default: begin
        result <= 0;
        done <= 0;
      end
    endcase
  end
end

endmodule
